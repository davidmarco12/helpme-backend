// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace helpme.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240922201648_MercagoPago")]
    partial class MercagoPago
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("helpme.Models.Donacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Cantidad")
                        .HasColumnType("double precision");

                    b.Property<int?>("ContribuyenteId")
                        .HasColumnType("integer");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PublicacionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContribuyenteId");

                    b.ToTable("Donacion");
                });

            modelBuilder.Entity("helpme.Models.Imagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.Property<int?>("PublicacionId")
                        .HasColumnType("integer");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PublicacionId");

                    b.ToTable("Imagen");
                });

            modelBuilder.Entity("helpme.Models.Publicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenido")
                        .HasColumnType("text");

                    b.Property<string>("DescripcionDonacion")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("OrganizacionId")
                        .HasColumnType("integer");

                    b.Property<string>("ReferenciaDePago")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .HasColumnType("text");

                    b.Property<string>("UrlImagenes")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrganizacionId");

                    b.ToTable("Publicacion");
                });

            modelBuilder.Entity("helpme.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeUsuario")
                        .HasColumnType("text");

                    b.Property<string>("UrlImagen")
                        .HasColumnType("text");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("helpme.Models.Contribuyente", b =>
                {
                    b.HasBaseType("helpme.Models.Usuario");

                    b.Property<string>("Apellido")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Contribuyentes", (string)null);
                });

            modelBuilder.Entity("helpme.Models.Organizacion", b =>
                {
                    b.HasBaseType("helpme.Models.Usuario");

                    b.Property<string>("CUIT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaDeCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreOrganizacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Organizaciones", (string)null);
                });

            modelBuilder.Entity("helpme.Models.Donacion", b =>
                {
                    b.HasOne("helpme.Models.Contribuyente", "Contribuyente")
                        .WithMany()
                        .HasForeignKey("ContribuyenteId");

                    b.Navigation("Contribuyente");
                });

            modelBuilder.Entity("helpme.Models.Imagen", b =>
                {
                    b.HasOne("helpme.Models.Publicacion", null)
                        .WithMany("Imagenes")
                        .HasForeignKey("PublicacionId");
                });

            modelBuilder.Entity("helpme.Models.Publicacion", b =>
                {
                    b.HasOne("helpme.Models.Organizacion", "Organizacion")
                        .WithMany("Publicaciones")
                        .HasForeignKey("OrganizacionId");

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("helpme.Models.Contribuyente", b =>
                {
                    b.HasOne("helpme.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("helpme.Models.Contribuyente", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("helpme.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("helpme.Models.Organizacion", b =>
                {
                    b.HasOne("helpme.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("helpme.Models.Organizacion", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("helpme.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("helpme.Models.Publicacion", b =>
                {
                    b.Navigation("Imagenes");
                });

            modelBuilder.Entity("helpme.Models.Organizacion", b =>
                {
                    b.Navigation("Publicaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
